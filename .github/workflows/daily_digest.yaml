name: ArXiv Digest Daily

on:
  # 手动触发
  workflow_dispatch:
    inputs:
      test_mode:
        description: '测试模式（只处理1篇论文）'
        required: false
        default: 'false'
        type: choice
        options:
        - 'true'
        - 'false'

  # 定时触发：每天UTC时间09:00（北京时间17:00）执行
  schedule:
#    - cron: '0 9 * * 1-5'  # 周一到周五
    - cron: '0 1 * * *'  # 如果需要每天都执行，取消注释这行

jobs:
  generate-digest:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout代码
      uses: actions/checkout@v4

    - name: 设置Python环境
      uses: actions/setup-python@v5
      with:
        python-version: '3.12.11'
        cache: 'pip'

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 验证环境变量
      run: |
        echo "检查必需的环境变量..."
        if [ -z "$CUSTOM_API_KEY" ]; then
          echo "❌ CUSTOM_API_KEY未设置"
          exit 1
        else
          echo "✅ CUSTOM_API_KEY已设置"
        fi
        
        # 检查邮件配置（可选）
        if [ -n "$SENDGRID_API_KEY" ] && [ -n "$FROM_EMAIL" ] && [ -n "$TO_EMAIL" ]; then
          echo "✅ SendGrid邮件配置完整"
        elif [ -n "$MAIL_CONNECTION" ] && [ -n "$FROM_EMAIL" ] && [ -n "$TO_EMAIL" ]; then
          echo "✅ SMTP邮件配置完整"
        elif [ -n "$MAIL_USERNAME" ] && [ -n "$MAIL_PASSWORD" ] && [ -n "$FROM_EMAIL" ] && [ -n "$TO_EMAIL" ]; then
          echo "✅ SMTP用户名密码配置完整"
        else
          echo "⚠️ 邮件配置不完整，将只生成HTML文件"
        fi
        
        # 显示测试模式状态
        if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
          echo "🧪 测试模式已启用 - 只处理1篇论文"
        else
          echo "🚀 正常模式 - 处理所有相关论文"
        fi
      env:
        CUSTOM_API_KEY: ${{ secrets.CUSTOM_API_KEY }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        MAIL_CONNECTION: ${{ secrets.MAIL_CONNECTION }}
        MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
        MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
        FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
        TO_EMAIL: ${{ secrets.TO_EMAIL }}

    - name: 运行ArXiv Digest生成
      run: |
        if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
          echo "🧪 测试模式：生成单论文ArXiv Digest..."
          # 如果存在测试配置文件则使用，否则使用默认配置
          if [ -f "test-config.yaml" ]; then
            echo "📝 使用测试专用配置文件: test-config.yaml"
            python src/action.py --config test-config.yaml --test-mode
          else
            echo "📝 使用默认配置文件: config.yaml"
            python src/action.py --config config.yaml --test-mode
          fi
        else
          echo "🚀 正常模式：生成完整ArXiv Digest..."
          python src/action.py --config config.yaml
        fi
      env:
        CUSTOM_API_KEY: ${{ secrets.CUSTOM_API_KEY }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        MAIL_CONNECTION: ${{ secrets.MAIL_CONNECTION }}
        MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
        MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
        FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
        TO_EMAIL: ${{ secrets.TO_EMAIL }}
        ARXIV_DIGEST_TEST_MODE: ${{ github.event.inputs.test_mode }}

    - name: 上传HTML摘要文件
      uses: actions/upload-artifact@v4
      with:
        name: arxiv-digest-html-${{ github.event.inputs.test_mode == 'true' && 'test' || 'full' }}
        path: digest.html
        retention-days: 30

    - name: 上传数据文件
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: arxiv-data-${{ github.event.inputs.test_mode == 'true' && 'test' || 'full' }}
        path: data/
        retention-days: 7

    - name: 显示运行总结
      run: |
        echo "==================== 运行总结 ===================="
        if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
          echo "🧪 测试模式运行结果:"
        else
          echo "🚀 正常模式运行结果:"
        fi
        
        if [ -f "digest.html" ]; then
          file_size=$(stat -c%s "digest.html")
          echo "✅ HTML摘要生成成功: ${file_size} bytes"
          
          # 显示HTML内容概要
          echo "📄 摘要内容概要:"
          if command -v grep >/dev/null 2>&1; then
            paper_count=$(grep -c "<h3>" digest.html 2>/dev/null || echo "无法统计")
            echo "   论文数量: ${paper_count} 篇"
          fi
        else
          echo "❌ HTML摘要生成失败"
        fi
        
        echo "📁 数据文件:"
        ls -la data/ 2>/dev/null || echo "无数据文件"
        
        if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
          echo "📧 测试模式完成 - 请检查邮箱是否收到单论文测试邮件"
        else
          echo "📧 正常模式完成 - 请检查邮箱是否收到完整digest"
        fi
        echo "=================================================="